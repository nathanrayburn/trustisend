steps:
  # Step 0: Run tests
  - name: python:3.8  # Use a Python Docker image for running tests
    id: test
    entrypoint: python
    args:
      - -m
      - pytest
      - --junitxml=./test-results.xml  # Output test results in JUnit XML format

  # Step 1: Build the Docker image and tag it with the commit SHA
  - name: gcr.io/cloud-builders/docker
    id: build
    waitFor: ['test']  # Ensure this step waits for the test step to complete
    args:
      - build
      - '-t'
      - 'europe-west1-docker.pkg.dev/trustisend-433213/trustisend-gcr/av:$COMMIT_SHA'
      - '.'

  # Step 2: Push the Docker image to Artifact Registry
  - name: gcr.io/cloud-builders/docker
    id: push
    waitFor: ['build']  # Ensure this step waits for the build step to complete
    args:
      - push
      - 'europe-west1-docker.pkg.dev/trustisend-433213/trustisend-gcr/av:$COMMIT_SHA'

  # Step 3: Deploy the application to Cloud Run using the built image
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: deploy
    waitFor: ['push']  # Ensure this step waits for the push step to complete
    args:
      - run
      - deploy
      - av  # Cloud Run service name
      - '--image'
      - 'europe-west1-docker.pkg.dev/trustisend-433213/trustisend-gcr/av:$COMMIT_SHA'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--quiet'
      - '--update-secrets'
      - '/firestore-mnt/firestore=projects/579596661856/secrets/firestore:latest'
      - '--update-secrets'
      - '/gc-storage-mnt/storage=projects/579596661856/secrets/gc-storage-key:latest'
      - '--update-secrets'
      - '/api-mnt/api=projects/579596661856/secrets/api:latest'
    entrypoint: gcloud

# Specify the images that will be pushed by Cloud Build
images:
  - 'europe-west1-docker.pkg.dev/trustisend-433213/trustisend-gcr/av:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: 1200s
